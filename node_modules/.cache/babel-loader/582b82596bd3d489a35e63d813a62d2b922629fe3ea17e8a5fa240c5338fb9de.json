{"ast":null,"code":"export const sizeData = {\n  women: [{\n    descriptive: 'XXS',\n    france_spain_portugal: '32',\n    us: '0',\n    uk_au: '4',\n    de_dk_ch: '30',\n    italy: '36',\n    japan: '3',\n    brazil: '34',\n    russia: '38'\n  }, {\n    descriptive: 'XS',\n    france_spain_portugal: '34',\n    us: '2',\n    uk_au: '6',\n    de_dk_ch: '32',\n    italy: '38',\n    japan: '5',\n    brazil: '36',\n    russia: '40'\n  }, {\n    descriptive: 'S',\n    france_spain_portugal: '36',\n    us: '4',\n    uk_au: '8',\n    de_dk_ch: '34',\n    italy: '40',\n    japan: '7',\n    brazil: '38',\n    russia: '42'\n  }, {\n    descriptive: 'M',\n    france_spain_portugal: '38',\n    us: '6',\n    uk_au: '10',\n    de_dk_ch: '36',\n    italy: '42',\n    japan: '9',\n    brazil: '40',\n    russia: '44'\n  }, {\n    descriptive: 'L',\n    france_spain_portugal: '40',\n    us: '8',\n    uk_au: '12',\n    de_dk_ch: '38',\n    italy: '44',\n    japan: '11',\n    brazil: '42',\n    russia: '46'\n  }, {\n    descriptive: 'XL',\n    france_spain_portugal: '42',\n    us: '10',\n    uk_au: '14',\n    de_dk_ch: '40',\n    italy: '46',\n    japan: '13',\n    brazil: '44',\n    russia: '48'\n  }, {\n    descriptive: 'XXL',\n    france_spain_portugal: '44',\n    us: '12',\n    uk_au: '16',\n    de_dk_ch: '42',\n    italy: '48',\n    japan: '15',\n    brazil: '46',\n    russia: '50'\n  }, {\n    descriptive: 'XXXL',\n    france_spain_portugal: '46',\n    us: '14',\n    uk_au: '18',\n    de_dk_ch: '44',\n    italy: '50',\n    japan: '17',\n    brazil: '48',\n    russia: '52'\n  }, {\n    descriptive: 'XXXXL',\n    france_spain_portugal: '48',\n    us: '16',\n    uk_au: '20',\n    de_dk_ch: '46',\n    italy: '52',\n    japan: '19',\n    brazil: '50',\n    russia: '54'\n  }],\n  men: [{\n    descriptive: 'XXS',\n    france_spain_portugal: '32',\n    us: '0',\n    uk_au: '4',\n    de_dk_ch: '30',\n    italy: '36',\n    japan: '3',\n    brazil: '34',\n    russia: '38'\n  }, {\n    descriptive: 'XS',\n    france_spain_portugal: '34',\n    us: '2',\n    uk_au: '6',\n    de_dk_ch: '32',\n    italy: '38',\n    japan: '5',\n    brazil: '36',\n    russia: '40'\n  }, {\n    descriptive: 'S',\n    france_spain_portugal: '36',\n    us: '4',\n    uk_au: '8',\n    de_dk_ch: '34',\n    italy: '40',\n    japan: '7',\n    brazil: '38',\n    russia: '42'\n  }, {\n    descriptive: 'M',\n    france_spain_portugal: '38',\n    us: '6',\n    uk_au: '10',\n    de_dk_ch: '36',\n    italy: '42',\n    japan: '9',\n    brazil: '40',\n    russia: '44'\n  }, {\n    descriptive: 'L',\n    france_spain_portugal: '40',\n    us: '8',\n    uk_au: '12',\n    de_dk_ch: '38',\n    italy: '44',\n    japan: '11',\n    brazil: '42',\n    russia: '46'\n  }, {\n    descriptive: 'XL',\n    france_spain_portugal: '42',\n    us: '10',\n    uk_au: '14',\n    de_dk_ch: '40',\n    italy: '46',\n    japan: '13',\n    brazil: '44',\n    russia: '48'\n  }, {\n    descriptive: 'XXL',\n    france_spain_portugal: '44',\n    us: '12',\n    uk_au: '16',\n    de_dk_ch: '42',\n    italy: '48',\n    japan: '15',\n    brazil: '46',\n    russia: '50'\n  }, {\n    descriptive: 'XXXL',\n    france_spain_portugal: '46',\n    us: '14',\n    uk_au: '18',\n    de_dk_ch: '44',\n    italy: '50',\n    japan: '17',\n    brazil: '48',\n    russia: '52'\n  }, {\n    descriptive: 'XXXXL',\n    france_spain_portugal: '48',\n    us: '16',\n    uk_au: '20',\n    de_dk_ch: '46',\n    italy: '52',\n    japan: '19',\n    brazil: '50',\n    russia: '54'\n  }]\n};\nexport const regions = [{\n  id: 'france_spain_portugal',\n  label: 'France, Spain and Portugal'\n}, {\n  id: 'us',\n  label: 'United States'\n}, {\n  id: 'uk_au',\n  label: 'United Kingdom and Australia'\n}, {\n  id: 'de_dk_ch',\n  label: 'Germany, Denmark and Switzerland'\n}, {\n  id: 'italy',\n  label: 'Italy'\n}, {\n  id: 'japan',\n  label: 'Japan'\n}, {\n  id: 'brazil',\n  label: 'Brazil'\n}, {\n  id: 'russia',\n  label: 'Russia'\n}];\n\n// Helper types for size systems\n\n// Helper function to get all available sizes for a specific system\nexport const getAvailableSizes = system => {\n  return [...new Set(sizeData.women.map(size => size[system]))];\n};\n\n// Helper function to convert between size systems\nexport const convertSize = (value, fromSystem, toSystem) => {\n  const sizeMapping = sizeData.women.find(size => size[fromSystem] === value);\n  return sizeMapping ? sizeMapping[toSystem] : null;\n};","map":{"version":3,"names":["sizeData","women","descriptive","france_spain_portugal","us","uk_au","de_dk_ch","italy","japan","brazil","russia","men","regions","id","label","getAvailableSizes","system","Set","map","size","convertSize","value","fromSystem","toSystem","sizeMapping","find"],"sources":["/Users/mindaugas/test react/my-react-app/src/data/sizingData.ts"],"sourcesContent":["export interface SizeMapping {\n  descriptive: string;\n  france_spain_portugal: string;\n  us: string;\n  uk_au: string;\n  de_dk_ch: string;\n  italy: string;\n  japan: string;\n  brazil: string;\n  russia: string;\n}\n\nexport interface SizeData {\n  men: SizeMapping[];\n  women: SizeMapping[];\n}\n\nexport const sizeData: SizeData = {\n  women: [\n    {\n      descriptive: 'XXS',\n      france_spain_portugal: '32',\n      us: '0',\n      uk_au: '4',\n      de_dk_ch: '30',\n      italy: '36',\n      japan: '3',\n      brazil: '34',\n      russia: '38',\n    },\n    {\n      descriptive: 'XS',\n      france_spain_portugal: '34',\n      us: '2',\n      uk_au: '6',\n      de_dk_ch: '32',\n      italy: '38',\n      japan: '5',\n      brazil: '36',\n      russia: '40',\n    },\n    {\n      descriptive: 'S',\n      france_spain_portugal: '36',\n      us: '4',\n      uk_au: '8',\n      de_dk_ch: '34',\n      italy: '40',\n      japan: '7',\n      brazil: '38',\n      russia: '42',\n    },\n    {\n      descriptive: 'M',\n      france_spain_portugal: '38',\n      us: '6',\n      uk_au: '10',\n      de_dk_ch: '36',\n      italy: '42',\n      japan: '9',\n      brazil: '40',\n      russia: '44',\n    },\n    {\n      descriptive: 'L',\n      france_spain_portugal: '40',\n      us: '8',\n      uk_au: '12',\n      de_dk_ch: '38',\n      italy: '44',\n      japan: '11',\n      brazil: '42',\n      russia: '46',\n    },\n    {\n      descriptive: 'XL',\n      france_spain_portugal: '42',\n      us: '10',\n      uk_au: '14',\n      de_dk_ch: '40',\n      italy: '46',\n      japan: '13',\n      brazil: '44',\n      russia: '48',\n    },\n    {\n      descriptive: 'XXL',\n      france_spain_portugal: '44',\n      us: '12',\n      uk_au: '16',\n      de_dk_ch: '42',\n      italy: '48',\n      japan: '15',\n      brazil: '46',\n      russia: '50',\n    },\n    {\n      descriptive: 'XXXL',\n      france_spain_portugal: '46',\n      us: '14',\n      uk_au: '18',\n      de_dk_ch: '44',\n      italy: '50',\n      japan: '17',\n      brazil: '48',\n      russia: '52',\n    },\n    {\n      descriptive: 'XXXXL',\n      france_spain_portugal: '48',\n      us: '16',\n      uk_au: '20',\n      de_dk_ch: '46',\n      italy: '52',\n      japan: '19',\n      brazil: '50',\n      russia: '54',\n    },\n  ],\n  men: [\n    {\n      descriptive: 'XXS',\n      france_spain_portugal: '32',\n      us: '0',\n      uk_au: '4',\n      de_dk_ch: '30',\n      italy: '36',\n      japan: '3',\n      brazil: '34',\n      russia: '38',\n    },\n    {\n      descriptive: 'XS',\n      france_spain_portugal: '34',\n      us: '2',\n      uk_au: '6',\n      de_dk_ch: '32',\n      italy: '38',\n      japan: '5',\n      brazil: '36',\n      russia: '40',\n    },\n    {\n      descriptive: 'S',\n      france_spain_portugal: '36',\n      us: '4',\n      uk_au: '8',\n      de_dk_ch: '34',\n      italy: '40',\n      japan: '7',\n      brazil: '38',\n      russia: '42',\n    },\n    {\n      descriptive: 'M',\n      france_spain_portugal: '38',\n      us: '6',\n      uk_au: '10',\n      de_dk_ch: '36',\n      italy: '42',\n      japan: '9',\n      brazil: '40',\n      russia: '44',\n    },\n    {\n      descriptive: 'L',\n      france_spain_portugal: '40',\n      us: '8',\n      uk_au: '12',\n      de_dk_ch: '38',\n      italy: '44',\n      japan: '11',\n      brazil: '42',\n      russia: '46',\n    },\n    {\n      descriptive: 'XL',\n      france_spain_portugal: '42',\n      us: '10',\n      uk_au: '14',\n      de_dk_ch: '40',\n      italy: '46',\n      japan: '13',\n      brazil: '44',\n      russia: '48',\n    },\n    {\n      descriptive: 'XXL',\n      france_spain_portugal: '44',\n      us: '12',\n      uk_au: '16',\n      de_dk_ch: '42',\n      italy: '48',\n      japan: '15',\n      brazil: '46',\n      russia: '50',\n    },\n    {\n      descriptive: 'XXXL',\n      france_spain_portugal: '46',\n      us: '14',\n      uk_au: '18',\n      de_dk_ch: '44',\n      italy: '50',\n      japan: '17',\n      brazil: '48',\n      russia: '52',\n    },\n    {\n      descriptive: 'XXXXL',\n      france_spain_portugal: '48',\n      us: '16',\n      uk_au: '20',\n      de_dk_ch: '46',\n      italy: '52',\n      japan: '19',\n      brazil: '50',\n      russia: '54',\n    },\n  ],\n};\n\nexport const regions = [\n  { id: 'france_spain_portugal', label: 'France, Spain and Portugal' },\n  { id: 'us', label: 'United States' },\n  { id: 'uk_au', label: 'United Kingdom and Australia' },\n  { id: 'de_dk_ch', label: 'Germany, Denmark and Switzerland' },\n  { id: 'italy', label: 'Italy' },\n  { id: 'japan', label: 'Japan' },\n  { id: 'brazil', label: 'Brazil' },\n  { id: 'russia', label: 'Russia' },\n] as const;\n\nexport type Region = (typeof regions)[number]['id'];\n\n// Helper types for size systems\nexport type SizeSystem =\n  | 'descriptive'\n  | 'us'\n  | 'uk_au'\n  | 'de_dk_ch'\n  | 'italy'\n  | 'japan'\n  | 'brazil'\n  | 'russia';\n\n// Helper function to get all available sizes for a specific system\nexport const getAvailableSizes = (system: SizeSystem): string[] => {\n  return [...new Set(sizeData.women.map((size) => size[system]))];\n};\n\n// Helper function to convert between size systems\nexport const convertSize = (\n  value: string,\n  fromSystem: SizeSystem,\n  toSystem: SizeSystem\n): string | null => {\n  const sizeMapping = sizeData.women.find((size) => size[fromSystem] === value);\n  return sizeMapping ? sizeMapping[toSystem] : null;\n};\n"],"mappings":"AAiBA,OAAO,MAAMA,QAAkB,GAAG;EAChCC,KAAK,EAAE,CACL;IACEC,WAAW,EAAE,KAAK;IAClBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,KAAK;IAClBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,MAAM;IACnBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,OAAO;IACpBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,CACF;EACDC,GAAG,EAAE,CACH;IACET,WAAW,EAAE,KAAK;IAClBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,GAAG;IAChBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,KAAK;IAClBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,MAAM;IACnBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,EACD;IACER,WAAW,EAAE,OAAO;IACpBC,qBAAqB,EAAE,IAAI;IAC3BC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC;AAEL,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,CACrB;EAAEC,EAAE,EAAE,uBAAuB;EAAEC,KAAK,EAAE;AAA6B,CAAC,EACpE;EAAED,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAgB,CAAC,EACpC;EAAED,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE;AAA+B,CAAC,EACtD;EAAED,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAmC,CAAC,EAC7D;EAAED,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAC/B;EAAED,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAC/B;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,CACzB;;AAIV;;AAWA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,MAAkB,IAAe;EACjE,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACjB,QAAQ,CAACC,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CACzBC,KAAa,EACbC,UAAsB,EACtBC,QAAoB,KACF;EAClB,MAAMC,WAAW,GAAGxB,QAAQ,CAACC,KAAK,CAACwB,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACG,UAAU,CAAC,KAAKD,KAAK,CAAC;EAC7E,OAAOG,WAAW,GAAGA,WAAW,CAACD,QAAQ,CAAC,GAAG,IAAI;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}