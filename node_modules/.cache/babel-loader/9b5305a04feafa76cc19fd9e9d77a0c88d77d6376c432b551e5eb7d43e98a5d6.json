{"ast":null,"code":"export const clothingSizes = [{\n  descriptive: 'XXS',\n  us: '00',\n  uk: '0',\n  eu: '28',\n  it: '34'\n}, {\n  descriptive: 'XS',\n  us: '0',\n  uk: '2',\n  eu: '30',\n  it: '36'\n}, {\n  descriptive: 'XS',\n  us: '2',\n  uk: '4',\n  eu: '32',\n  it: '38'\n}, {\n  descriptive: 'S',\n  us: '4',\n  uk: '6',\n  eu: '34',\n  it: '40'\n}, {\n  descriptive: 'S',\n  us: '6',\n  uk: '8',\n  eu: '36',\n  it: '42'\n}, {\n  descriptive: 'M',\n  us: '8',\n  uk: '10',\n  eu: '38',\n  it: '44'\n}, {\n  descriptive: 'M',\n  us: '10',\n  uk: '12',\n  eu: '40',\n  it: '46'\n}, {\n  descriptive: 'L',\n  us: '12',\n  uk: '14',\n  eu: '42',\n  it: '48'\n}, {\n  descriptive: 'L',\n  us: '14',\n  uk: '16',\n  eu: '44',\n  it: '50'\n}, {\n  descriptive: 'XL',\n  us: '16',\n  uk: '18',\n  eu: '46',\n  it: '52'\n}, {\n  descriptive: 'XL',\n  us: '18',\n  uk: '20',\n  eu: '48',\n  it: '54'\n}, {\n  descriptive: '2XL',\n  us: '20',\n  uk: '22',\n  eu: '50',\n  it: '56'\n}, {\n  descriptive: '2XL',\n  us: '22',\n  uk: '24',\n  eu: '52',\n  it: '58'\n}];\n\n// Helper types for size systems\n\n// Helper function to get all available sizes for a specific system\nexport const getAvailableSizes = system => {\n  return [...new Set(clothingSizes.map(size => size[system]))];\n};\n\n// Helper function to convert between size systems\nexport const convertSize = (value, fromSystem, toSystem) => {\n  const sizeMapping = clothingSizes.find(size => size[fromSystem] === value);\n  return sizeMapping ? sizeMapping[toSystem] : null;\n};","map":{"version":3,"names":["clothingSizes","descriptive","us","uk","eu","it","getAvailableSizes","system","Set","map","size","convertSize","value","fromSystem","toSystem","sizeMapping","find"],"sources":["/Users/mindaugas/test react/my-react-app/src/data/sizingData.ts"],"sourcesContent":["export interface SizeMapping {\n  descriptive: string; // XXS, XS, S, etc.\n  us: string; // US numeric size\n  uk: string; // UK size\n  eu: string; // EU size\n  it: string; // Italian size\n}\n\nexport const clothingSizes: SizeMapping[] = [\n  {\n    descriptive: 'XXS',\n    us: '00',\n    uk: '0',\n    eu: '28',\n    it: '34',\n  },\n  {\n    descriptive: 'XS',\n    us: '0',\n    uk: '2',\n    eu: '30',\n    it: '36',\n  },\n  {\n    descriptive: 'XS',\n    us: '2',\n    uk: '4',\n    eu: '32',\n    it: '38',\n  },\n  {\n    descriptive: 'S',\n    us: '4',\n    uk: '6',\n    eu: '34',\n    it: '40',\n  },\n  {\n    descriptive: 'S',\n    us: '6',\n    uk: '8',\n    eu: '36',\n    it: '42',\n  },\n  {\n    descriptive: 'M',\n    us: '8',\n    uk: '10',\n    eu: '38',\n    it: '44',\n  },\n  {\n    descriptive: 'M',\n    us: '10',\n    uk: '12',\n    eu: '40',\n    it: '46',\n  },\n  {\n    descriptive: 'L',\n    us: '12',\n    uk: '14',\n    eu: '42',\n    it: '48',\n  },\n  {\n    descriptive: 'L',\n    us: '14',\n    uk: '16',\n    eu: '44',\n    it: '50',\n  },\n  {\n    descriptive: 'XL',\n    us: '16',\n    uk: '18',\n    eu: '46',\n    it: '52',\n  },\n  {\n    descriptive: 'XL',\n    us: '18',\n    uk: '20',\n    eu: '48',\n    it: '54',\n  },\n  {\n    descriptive: '2XL',\n    us: '20',\n    uk: '22',\n    eu: '50',\n    it: '56',\n  },\n  {\n    descriptive: '2XL',\n    us: '22',\n    uk: '24',\n    eu: '52',\n    it: '58',\n  },\n];\n\n// Helper types for size systems\nexport type SizeSystem = 'descriptive' | 'us' | 'uk' | 'eu' | 'it';\n\n// Helper function to get all available sizes for a specific system\nexport const getAvailableSizes = (system: SizeSystem): string[] => {\n  return [...new Set(clothingSizes.map((size) => size[system]))];\n};\n\n// Helper function to convert between size systems\nexport const convertSize = (\n  value: string,\n  fromSystem: SizeSystem,\n  toSystem: SizeSystem\n): string | null => {\n  const sizeMapping = clothingSizes.find((size) => size[fromSystem] === value);\n  return sizeMapping ? sizeMapping[toSystem] : null;\n};\n"],"mappings":"AAQA,OAAO,MAAMA,aAA4B,GAAG,CAC1C;EACEC,WAAW,EAAE,KAAK;EAClBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,GAAG;EAChBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,KAAK;EAClBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,EACD;EACEJ,WAAW,EAAE,KAAK;EAClBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC,CACF;;AAED;;AAGA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,MAAkB,IAAe;EACjE,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACR,aAAa,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CACzBC,KAAa,EACbC,UAAsB,EACtBC,QAAoB,KACF;EAClB,MAAMC,WAAW,GAAGf,aAAa,CAACgB,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACG,UAAU,CAAC,KAAKD,KAAK,CAAC;EAC5E,OAAOG,WAAW,GAAGA,WAAW,CAACD,QAAQ,CAAC,GAAG,IAAI;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}